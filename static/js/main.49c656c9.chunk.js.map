{"version":3,"sources":["components/styles/MainViewer.module.scss","components/styles/Mapper.module.scss","components/styles/pageGenerator.module.scss","components/styles/loadMore.module.scss","components/styles/Info.module.scss","redux/actionTypes.js","redux/reducer.js","redux/store.js","components/Mapper.jsx","components/Info.jsx","components/LoadMoreButton.jsx","components/PageGenerator.jsx","components/PokeFilter.jsx","components/MainViewer.jsx","components/api/pokemonApi.js","functionsForThunk/idExtractor.js","functionsForThunk/typeExtractor.js","redux/thunks.js","functions/pokemonInfoMaker.js","functions/makePageArray.js","App.jsx","index.js"],"names":["module","exports","actionTypes","initialState","items","pokeInfo","pageNumber","showFilteredList","currentPage","pagesCount","pagesArray","pageSize","setAllPokemons","payload","type","setcurrentPage","store","createStore","state","action","composeWithDevTools","applyMiddleware","thunk","Mapper","props","colorOfAttack","color","map","item","i","length","type_1","color_1","type_2","color_2","className","styles","onClick","id","setPokemon","picture","src","name","charAt","toUpperCase","slice","typeWrapper","attackTypes","style","backgroundColor","Info","undefined","nameWrapper","infoBox","infoBoxLeft","infoBoxRight","attack","defense","hp","spAttack","spDefense","speed","weight","totalMoves","LoadMoreButton","button","loadMore","PageGenerator","mappedPages","pages","page","generator","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","attackType","setAttackType","FormControl","InputLabel","Select","labelId","value","onChange","event","target","filter","MenuItem","MainViewer","showPokemon","mainWrapper","appWrapper","app","headerWrapper","header","contentWrapper","content","listWrapper","pokemonList","numberOfPage","switchPage","pokeFilter","typeId","pokemonFilter","pokemonInfo","instance","axios","baseURL","pokemonAPI","get","pokemonId","idExtractor","numberEnd","url","typeExtractor","array","readyPokemons","promises","push","then","response","types","data","Promise","all","sort","a","b","thunks","dispatch","results","number","stats","base_stat","moves","pokemon","Math","ceil","makePageArray","setPagesArray","App","useDispatch","useSelector","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49c656c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"MainViewer_mainWrapper__2yU_U\",\"appWrapper\":\"MainViewer_appWrapper__2kAOZ\",\"app\":\"MainViewer_app__wQSvI\",\"headerWrapper\":\"MainViewer_headerWrapper__22MFk\",\"header\":\"MainViewer_header__1-q1N\",\"content\":\"MainViewer_content__2anKZ\",\"listWrapper\":\"MainViewer_listWrapper__1IDi3\",\"pokemonList\":\"MainViewer_pokemonList__22MXw\",\"pokeFilter\":\"MainViewer_pokeFilter__QY8_X\",\"pokemonInfo\":\"MainViewer_pokemonInfo__qFdBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Mapper_item__2bD5K\",\"picture\":\"Mapper_picture__SUEni\",\"nameWrapper\":\"Mapper_nameWrapper__2ydmc\",\"name\":\"Mapper_name__3iRjn\",\"typeWrapper\":\"Mapper_typeWrapper__1X4W2\",\"attackTypes\":\"Mapper_attackTypes__1XKKo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"generator\":\"pageGenerator_generator__1fdPH\",\"page\":\"pageGenerator_page__KLCcO\",\"currentPage\":\"pageGenerator_currentPage__1-VrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"loadMore_button__Q79_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Info_item__UmmcK\",\"picture\":\"Info_picture__2TH73\",\"nameWrapper\":\"Info_nameWrapper__2mZMC\",\"name\":\"Info_name__3w95d\",\"infoBox\":\"Info_infoBox__2xVit\",\"infoBoxLeft\":\"Info_infoBoxLeft__1ov_J\",\"infoBoxRight\":\"Info_infoBoxRight__EUZVE\"};","export const actionTypes = {\r\n    SET_ALL_POKEMONS: \"SET_ALL_POKEMONS\",\r\n    SET_SOLO_POKEMON: \"SET_SOLO_POKEMON\",\r\n    SET_PAGES_COUNT: \"SET_PAGES_COUNT\",\r\n    SET_SHOW_FILTERED_LIST: \"SET_SHOW_FILTERED_LIST\",\r\n    SET_CURRENT_PAGE: \"SET_CURRENT_PAGE\",\r\n    SET_PAGES_ARRAY: \"SET_PAGES_ARRAY\",\r\n    SET_PAGE_NUMBER: \"SET_PAGE_NUMBER\"\r\n}\r\n","import { actionTypes } from './actionTypes';\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    items: ' ',\r\n    pokeInfo: ' ',\r\n    pageNumber: 0,\r\n    showFilteredList: false,\r\n    currentPage: 0,\r\n    pagesCount: 0,\r\n    pagesArray: ' ',\r\n    pageSize: 12\r\n}\r\n\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_ALL_POKEMONS:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n\r\n        case actionTypes.SET_SOLO_POKEMON:\r\n            return {\r\n                ...state,\r\n                pokeInfo: action.payload\r\n            }\r\n\r\n        case actionTypes.SET_PAGES_COUNT:\r\n            return {\r\n                ...state,\r\n                pagesCount: action.payload\r\n            }\r\n\r\n        case actionTypes.SET_SHOW_FILTERED_LIST:\r\n            return {\r\n                ...state,\r\n                showFilteredList: action.payload\r\n            }\r\n\r\n        case actionTypes.SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload\r\n            }\r\n\r\n        case actionTypes.SET_PAGES_ARRAY:\r\n            return {\r\n                ...state,\r\n                pagesArray: action.payload\r\n            }\r\n\r\n        case actionTypes.SET_PAGE_NUMBER:\r\n            return {\r\n                ...state,\r\n                pageNumber: state.pageNumber + state.pageSize\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport const setAllPokemons = (payload) => {\r\n    return {\r\n        type: actionTypes.SET_ALL_POKEMONS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setSoloPokemon = (payload) => {\r\n    return {\r\n        type: actionTypes.SET_SOLO_POKEMON,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setPagesCount = (payload) => {\r\n    return {\r\n        type: actionTypes.SET_PAGES_COUNT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setShowFilteredList = (payload) => {\r\n    return {\r\n        type: actionTypes.SET_SHOW_FILTERED_LIST,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setcurrentPage = (payload) => {\r\n    return {\r\n        type: actionTypes.SET_CURRENT_PAGE,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setPagesArray = (payload) => {\r\n    return {\r\n        type: actionTypes.SET_PAGES_ARRAY,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setPageNumber = () => {\r\n    return { type: actionTypes.SET_PAGE_NUMBER }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { reducer } from './reducer';\r\n\r\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\r\nimport styles from './styles/Mapper.module.scss';\r\nimport ListItem from './ListItem/ListItem';\r\n\r\nlet Mapper = (props) => {\r\n\r\n    if (props.items === ' ') {\r\n        return <div>\r\n            Data is not downloaded\r\n        </div>\r\n    }\r\n\r\n    let setPokemon = (id) => {\r\n        props.setPokemon(id);\r\n    }\r\n\r\n    let colorOfAttack = [\r\n        { type: 'normal', color: 'white' },\r\n        { type: 'fighting', color: 'brown' },\r\n        { type: 'flying', color: 'white' },\r\n        { type: 'poison', color: 'violet' },\r\n        { type: 'ground', color: 'brown' },\r\n        { type: 'rock', color: 'gray' },\r\n        { type: 'bug', color: '#339966' },\r\n        { type: 'ghost', color: 'gray' },\r\n        { type: 'steel', color: 'gray' },\r\n        { type: 'fire', color: '#f98080' },\r\n        { type: 'water', color: '#6287ac' },\r\n        { type: 'grass', color: '#79b48d' },\r\n        { type: 'electric', color: 'yellow' },\r\n        { type: 'psychic', color: 'brown' },\r\n        { type: 'ice', color: 'white' },\r\n        { type: 'dragon', color: 'red' },\r\n        { type: 'dark', color: 'white' },\r\n        { type: 'shadow', color: 'gray' },\r\n        { type: 'unknown', color: 'white' }\r\n    ]\r\n\r\n    return props.items.map(item => {\r\n        for (let i = 0; i < colorOfAttack.length; i++) {\r\n            if (item.type_1 === colorOfAttack[i].type) {\r\n                item.color_1 = colorOfAttack[i].color;\r\n            }\r\n        }\r\n        for (let i = 0; i < colorOfAttack.length; i++) {\r\n            if (item.type_2 === colorOfAttack[i].type) {\r\n                item.color_2 = colorOfAttack[i].color;\r\n            }\r\n        }\r\n\r\n        return (\r\n            //           <ListItem pokemon = {item}/>\r\n\r\n            <div className={styles.item} onClick={() => setPokemon(item.id)} key={item.id}>\r\n                <img className={styles.picture} src={item.picture} />\r\n                <div className={styles.name}>{item.name.charAt(0).toUpperCase() + item.name.slice(1)}</div>\r\n                <div className={styles.typeWrapper}>\r\n                    <span className={styles.attackTypes}\r\n                        style={{ backgroundColor: item.color_1 }}>\r\n                        {item.type_1.charAt(0).toUpperCase() + item.type_1.slice(1)}\r\n                    </span>\r\n                    {item.type_2 === 'absent' ? <span></span> :\r\n                        <span className={styles.attackTypes}\r\n                            style={{ backgroundColor: item.color_2 }}>\r\n                            {item.type_2.charAt(0).toUpperCase() + item.type_2.slice(1)}\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    \r\n};\r\nexport default Mapper;\r\n\r\n//=================================================================================//=================================================================================\r\n\r\n\r\n{/*\r\n\r\nimport React from 'react';\r\nimport styles from './styles/Mapper.module.scss';\r\nimport ListItem from './ListItem/ListItem';\r\n\r\nlet Mapper = (props) => {\r\n\r\n    if (props.items === ' ') {\r\n        return <div>\r\n            Data is not downloaded\r\n        </div>\r\n    }\r\n\r\n    let setPokemon = (id) => {\r\n        props.setPokemon(id);\r\n    }\r\n\r\n    let colorOfAttack = [\r\n        { type: 'normal', color: 'white' },\r\n        { type: 'fighting', color: 'brown' },\r\n        { type: 'flying', color: 'white' },\r\n        { type: 'poison', color: 'violet' },\r\n        { type: 'ground', color: 'brown' },\r\n        { type: 'rock', color: 'gray' },\r\n        { type: 'bug', color: '#339966' },\r\n        { type: 'ghost', color: 'gray' },\r\n        { type: 'steel', color: 'gray' },\r\n        { type: 'fire', color: '#f98080' },\r\n        { type: 'water', color: '#6287ac' },\r\n        { type: 'grass', color: '#79b48d' },\r\n        { type: 'electric', color: 'yellow' },\r\n        { type: 'psychic', color: 'brown' },\r\n        { type: 'ice', color: 'white' },\r\n        { type: 'dragon', color: 'red' },\r\n        { type: 'dark', color: 'white' },\r\n        { type: 'shadow', color: 'gray' },\r\n        { type: 'unknown', color: 'white' }\r\n    ]\r\n\r\n    let mappedItems = props.items.map(item => {\r\n        for (let i = 0; i < colorOfAttack.length; i++) {\r\n            if (item.type_1 === colorOfAttack[i].type) {\r\n                item.color_1 = colorOfAttack[i].color;\r\n            }\r\n        }\r\n        for (let i = 0; i < colorOfAttack.length; i++) {\r\n            if (item.type_2 === colorOfAttack[i].type) {\r\n                item.color_2 = colorOfAttack[i].color;\r\n            }\r\n        }\r\n\r\n        return (\r\n //           <ListItem pokemon = {item}/>\r\n\r\n            <div className={styles.item} onClick={() => setPokemon(item.id)} key={item.id}>\r\n                <div className={styles.picture}><img src={item.picture} /></div>\r\n                <div className={styles.nameWrapper}>\r\n                    <div className={styles.name}>{item.name.charAt(0).toUpperCase() + item.name.slice(1)}</div>\r\n                </div>\r\n                <div className={styles.typeWrapper}>\r\n                    <span className={styles.attackTypes}\r\n                        style={{ backgroundColor: item.color_1 }}>\r\n                        {item.type_1.charAt(0).toUpperCase() + item.type_1.slice(1)}\r\n                    </span>\r\n                    {item.type_2 === 'absent' ? <span></span> :\r\n                        <span className={styles.attackTypes}\r\n                            style={{ backgroundColor: item.color_2 }}>\r\n                            {item.type_2.charAt(0).toUpperCase() + item.type_2.slice(1)}\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return mappedItems\r\n};\r\nexport default Mapper;\r\n\r\n\r\n*/}","import React from 'react';\r\nimport styles from './styles/Info.module.scss';\r\n\r\nlet Info = (props) => {\r\n\r\n    if(props.item.name === undefined){\r\n        return <div></div>\r\n    }\r\n\r\n    let { item } = props;\r\n\r\n    return (\r\n        <div className={styles.item} >\r\n            <div className={styles.picture}><img src={item.picture}/></div>\r\n            <div className={styles.nameWrapper}>\r\n                <div className={styles.name}>{`${item.name} # ${item.id}`}</div>\r\n            </div>\r\n            <div className={styles.infoBox}>\r\n                <div className={styles.infoBoxLeft}>Type</div>\r\n                <div className={styles.infoBoxRight}>{item.type.charAt(0).toUpperCase() + item.type.slice(1)}</div>\r\n            </div>\r\n            <div className={styles.infoBox}>\r\n                <div className={styles.infoBoxLeft}>Attack</div>\r\n                <div className={styles.infoBoxRight}>{item.attack}</div>\r\n            </div>\r\n            <div className={styles.infoBox}>\r\n                <div className={styles.infoBoxLeft}>Defense</div>\r\n                <div className={styles.infoBoxRight}>{item.defense}</div>\r\n            </div>\r\n            <div className={styles.infoBox}>\r\n                <div className={styles.infoBoxLeft}>HP</div>\r\n                <div className={styles.infoBoxRight}>{item.hp}</div>\r\n            </div>\r\n            <div className={styles.infoBox}>\r\n                <div className={styles.infoBoxLeft}>SP Attack</div>\r\n                <div className={styles.infoBoxRight}>{item.spAttack}</div>\r\n            </div>\r\n            <div className={styles.infoBox}>\r\n                <div className={styles.infoBoxLeft}>SP Defense</div>\r\n                <div className={styles.infoBoxRight}>{item.spDefense}</div>\r\n            </div>\r\n            <div className={styles.infoBox}>\r\n                <div className={styles.infoBoxLeft}>Speed</div>\r\n                <div className={styles.infoBoxRight}>{item.speed}</div>\r\n            </div>\r\n            <div className={styles.infoBox}>\r\n                <div className={styles.infoBoxLeft}>Weight</div>\r\n                <div className={styles.infoBoxRight}>{item.weight}</div>\r\n            </div>\r\n            <div className={styles.infoBox}>\r\n                <div className={styles.infoBoxLeft}>Total Moves</div>\r\n                <div className={styles.infoBoxRight}>{item.totalMoves}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Info;\r\n","import React from 'react';\r\nimport styles from './styles/loadMore.module.scss'\r\n\r\nlet LoadMoreButton = (props) => {\r\n    let onClickAction = () => {\r\n        props.loadMore();\r\n    }\r\n    return (\r\n        <div className={styles.button} onClick={() => onClickAction()}>\r\n            Load More\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreButton;\r\n","import React from 'react';\r\nimport styles from './styles/pageGenerator.module.scss'\r\n\r\nconst PageGenerator = (props) => {\r\nconst setcurrentPage = (pageNumber) => {\r\n        props.setcurrentPage(pageNumber);\r\n    }\r\n\r\n    const mappedPages = props.pages.map(page => {\r\n        if (page === props.currentPage) {\r\n            return <div className={styles.currentPage}>{page}</div>\r\n        }\r\n        return <div className={styles.page} onClick={() => setcurrentPage(page)}>{page}</div>\r\n    })\r\n\r\n    return (\r\n        <div className={styles.generator}>\r\n            {mappedPages}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageGenerator;\r\n","import React from 'react';\r\n//import styles from './styles/pokefilter.module.scss';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n  const classes = useStyles();\r\n  const [attackType, setAttackType] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setAttackType(event.target.value);\r\n    props.filter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-label\">Attack Types</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={attackType}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem  value=\"1\">normal</MenuItem>\r\n          <MenuItem  value=\"2\">fighting</MenuItem>\r\n          <MenuItem  value=\"3\">flying</MenuItem>\r\n          <MenuItem  value=\"4\">poison</MenuItem>\r\n          <MenuItem  value=\"5\">ground</MenuItem>\r\n          <MenuItem  value=\"6\">rock</MenuItem>\r\n          <MenuItem value=\"7\">bug</MenuItem>\r\n          <MenuItem value=\"8\">ghost</MenuItem>\r\n          <MenuItem value=\"9\">steel</MenuItem>\r\n          <MenuItem value=\"10\">fire</MenuItem>\r\n          <MenuItem value=\"11\">water</MenuItem>\r\n          <MenuItem value=\"12\">grass</MenuItem>\r\n          <MenuItem value=\"13\">electric</MenuItem>\r\n          <MenuItem value=\"14\">psychic</MenuItem>\r\n          <MenuItem value=\"15\">ice</MenuItem>\r\n          <MenuItem value=\"16\">dragon</MenuItem>\r\n          <MenuItem value=\"17\">dark</MenuItem>\r\n          <MenuItem value=\"18\">fairy</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport styles from './styles/MainViewer.module.scss';\r\nimport Mapper from './Mapper';\r\nimport Info from './Info';\r\nimport LoadMoreButton from './LoadMoreButton';\r\nimport PageGenerator from './PageGenerator';\r\nimport SimpleSelect from './PokeFilter';\r\n\r\n\r\nexport const MainViewer = (props) => {\r\n    let {\r\n        showFilteredList,\r\n        items,\r\n        currentPage,\r\n        pagesArray,\r\n        pageSize,\r\n        pokeInfo\r\n    } = props.state;\r\n    let pokemonFilter = (typeId) => {\r\n        props.pokemonFilter(typeId)\r\n    }\r\n    let showPokemon = (id) => {\r\n        props.showPokemon(id)\r\n    }\r\n    let loadMore = () => {\r\n        props.loadMore()\r\n    }\r\n    let switchPage = (numberOfPage) => {\r\n        props.switchPage(numberOfPage)\r\n    }\r\n    return (\r\n        <div className={styles.mainWrapper}>\r\n            <div className={styles.appWrapper}>\r\n                <div className={styles.app}>\r\n                    <div className={styles.headerWrapper}>\r\n                        <div className={styles.header}>\r\n                            Pokedex\r\n            </div>\r\n                    </div>\r\n                    <div className={styles.contentWrapper}>\r\n                        <div className={styles.content}>\r\n                            <div className={styles.listWrapper}>\r\n                                {showFilteredList ?\r\n                                    <div>\r\n                                        <div className={styles.pokemonList}>\r\n                                            <Mapper setPokemon={showPokemon}\r\n                                                items={items.slice((currentPage - 1) * pageSize, currentPage * pageSize)} />\r\n                                        </div>\r\n                                        <PageGenerator pages={pagesArray} currentPage={currentPage}\r\n                                            setcurrentPage={switchPage} />\r\n                                    </div>\r\n                                    : <div>\r\n                                        <div className={styles.pokemonList}>\r\n                                            <Mapper setPokemon={showPokemon} items={items} />\r\n                                        </div>\r\n                                        <LoadMoreButton loadMore={loadMore} />\r\n                                    </div>\r\n                                }</div>\r\n                            <div className={styles.pokeFilter}>\r\n                                <SimpleSelect filter={pokemonFilter} />\r\n                            </div>\r\n                            <div className={styles.pokemonInfo}>\r\n                                <Info item={pokeInfo} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://pokeapi.co/api/v2/'\r\n})\r\n\r\nexport const pokemonAPI = {\r\n    getAllPokemons: (pageNumber, pageSize) => {\r\n        return instance.get(`pokemon/?offset=${pageNumber}&limit=${pageSize}`)\r\n    },\r\n\r\n    getFilteredPokemons: (typeId) => {\r\n        return instance.get(`type/${typeId}/`)\r\n    },\r\n\r\n    getSoloPokemonInfo: (pokemonId) => {\r\n        return instance.get(`pokemon/${pokemonId}`)\r\n    }\r\n};\r\n\r\n\r\n","export const idExtractor = (items) => {\r\n    const itemsWithId =  items.map(item => {\r\n        const numberEnd = item.url.length - 1;\r\n        const id = item.url.slice(34, numberEnd);\r\n        const picture = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n        return { ...item, id, picture }\r\n    })\r\n    return itemsWithId;\r\n}\r\n","import axios from 'axios';\r\n\r\n\r\nexport const  typeExtractor = (array) => {\r\n    let readyPokemons = [];\r\n    let promises = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n      promises.push(\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${array[i].id}/`).then(response => {\r\n          let types = response.data.types;\r\n          let type_1;\r\n          let type_2;\r\n          if (types.length === 1) {\r\n            type_1 = types[0].type.name;\r\n            type_2 = 'absent';\r\n          }\r\n          if (types.length === 2) {\r\n            type_1 = types[0].type.name;\r\n            type_2 = types[1].type.name;\r\n          }\r\n          array[i] = { ...array[i], type_1, type_2 }\r\n          readyPokemons.push(array[i]);\r\n        })\r\n      )\r\n    }\r\n\r\n  return   Promise.all(promises).then(() =>  readyPokemons.sort(function (a, b) {\r\n      if (+a.id > +b.id) {\r\n        return 1;\r\n      }\r\n      if (+a.id < +b.id) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    }));\r\n  }","import { pokemonAPI } from '../components/api/pokemonApi';\r\nimport { idExtractor } from '../functionsForThunk/idExtractor';\r\nimport { typeExtractor } from '../functionsForThunk/typeExtractor';\r\nimport { pokemonInfoMaker } from '../functions/pokemonInfoMaker';\r\nimport { makePageArray } from '../functions/makePageArray';\r\nimport {\r\n    setAllPokemons,\r\n    setSoloPokemon,\r\n    setPagesCount,\r\n    setShowFilteredList,\r\n    setcurrentPage,\r\n    setPagesArray,\r\n    setPageNumber\r\n} from './reducer';\r\n\r\nexport const thunks = {\r\n    getAllPokemons: (pageNumber, pageSize) => {\r\n        return (dispatch) => {\r\n            pokemonAPI.getAllPokemons(pageNumber, pageSize)\r\n                .then(response => idExtractor(response.data.results))\r\n                .then(items => typeExtractor(items))\r\n                .then(items => dispatch(setAllPokemons(items)))\r\n        }\r\n\r\n    },\r\n\r\n    getSoloPokemonInfo: (pokemonId) => {\r\n        return (dispatch) => {\r\n            pokemonAPI.getSoloPokemonInfo(pokemonId)\r\n                .then(response => pokemonInfoMaker(response.data, pokemonId))\r\n                .then(item => dispatch(setSoloPokemon(item)))\r\n        }\r\n    },\r\n\r\n    pokemonFilter: (typeId, pageSize) => {\r\n        return (dispatch) => {\r\n            pokemonAPI.getFilteredPokemons(typeId)\r\n                .then(response => {\r\n                    const data = response.data.pokemon.map(item => item.pokemon)\r\n                    const pagesCount = Math.ceil(data.length / pageSize)\r\n                    dispatch(setPagesCount(pagesCount))\r\n                    const pagesArray = makePageArray(pagesCount)\r\n                    dispatch(setPagesArray(pagesArray))\r\n\r\n                    return data;\r\n                })\r\n                .then(response => idExtractor(response))\r\n                .then(items => typeExtractor(items))\r\n                .then(items => {\r\n                    dispatch(setAllPokemons(items))\r\n                    dispatch(setShowFilteredList(true))\r\n                    dispatch(setcurrentPage(1))\r\n                })\r\n        }\r\n    },\r\n\r\n    setCurrentPage: (pageNumber) => {\r\n        return (dispatch) => dispatch(setcurrentPage(pageNumber))\r\n    },\r\n\r\n    setPageNumber: () => {\r\n        return (dispatch) => dispatch(setPageNumber())\r\n    }\r\n}\r\n","export const pokemonInfoMaker = (data, id) => {\r\n    return {\r\n        picture: `https://pokeres.bastionbot.org/images/pokemon/${id}.png`,\r\n        name: data.name,\r\n        number: '# ' + data.id,\r\n        id: data.id,\r\n        type: data.types[0].type.name,\r\n        attack: data.stats[1].base_stat,\r\n        defense: data.stats[2].base_stat,\r\n        hp: data.stats[0].base_stat,\r\n        spAttack: data.stats[3].base_stat,\r\n        spDefense: data.stats[4].base_stat,\r\n        speed: data.stats[5].base_stat,\r\n        weight: data.weight,\r\n        totalMoves: data.moves.length\r\n    }\r\n}","export const makePageArray = (pagesCount) => {\r\n    let pagesArray = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pagesArray.push(i)\r\n    }\r\n    return pagesArray\r\n}\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { MainViewer } from './components/MainViewer';\nimport { thunks } from './redux/thunks';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  let { pageNumber, pageSize } = state;\n\n  useEffect(() => {\n    dispatch(thunks.getAllPokemons(pageNumber, pageSize));\n  }, [pageNumber]);\n\n  async function pokemonFilter(typeId) {\n    dispatch(thunks.pokemonFilter(typeId, pageSize))\n  };\n\n  async function showPokemon(id) {\n    dispatch(thunks.getSoloPokemonInfo(id))\n  }\n\n  const loadMore = () => {\n    dispatch(thunks.setPageNumber())\n  }\n\n  const switchPage = async (numberOfPage) => {\n    dispatch(thunks.setCurrentPage(numberOfPage))\n  }\n\n  return (\n    <MainViewer state={state}\n      pokemonFilter={pokemonFilter}\n      showPokemon={showPokemon}\n      loadMore={loadMore}\n      switchPage={switchPage}\n    />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './redux/store';\nimport App from './App';\n\n\nReactDOM.render(\n  <Provider store ={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}